{"ast":null,"code":"var _jsxFileName = \"/home/prathmeshchhabra/Web-Development/Great Quotes Project/src/components/quotes/QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n  const [enteredAuthorIsValid, setEnteredAuthorIsValid] = useState(true);\n  const [enteredTextIsValid, setEnteredTextIsValid] = useState(true);\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    console.log(enteredAuthor); // optional: Could validate here\n\n    if (enteredAuthor.trim().length === '') {\n      setEnteredAuthorIsValid(false);\n    }\n\n    if (enteredText.trim().length === '') {\n      setEnteredTextIsValid(false);\n    }\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: isEntering,\n      message: location => 'Are you sure you want to leave this page. All your entered data will be lost!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onFocus: formFocusHandler,\n        className: classes.form,\n        onSubmit: submitFormHandler,\n        children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            ref: authorInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), !enteredAuthorIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter a valid name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            rows: \"5\",\n            ref: textInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), !enteredTextIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter a valid quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: finishEnteringHandler,\n            className: \"btn\",\n            children: \"Add Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteForm, \"UqL6ve3MAvOov6zarWp1QI+ZxfY=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"names":["useRef","useState","Prompt","Fragment","Card","LoadingSpinner","classes","QuoteForm","props","authorInputRef","textInputRef","isEntering","setIsEntering","enteredAuthorIsValid","setEnteredAuthorIsValid","enteredTextIsValid","setEnteredTextIsValid","formFocusHandler","finishEnteringHandler","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","console","log","trim","length","onAddQuote","author","text","location","form","isLoading","loading","control","actions"],"sources":["/home/prathmeshchhabra/Web-Development/Great Quotes Project/src/components/quotes/QuoteForm.js"],"sourcesContent":["import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n  const [enteredAuthorIsValid, setEnteredAuthorIsValid] = useState(true);\n  const [enteredTextIsValid, setEnteredTextIsValid] = useState(true);\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  }\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    console.log(enteredAuthor)\n\n    // optional: Could validate here\n    if(enteredAuthor.trim().length === ''){\n      setEnteredAuthorIsValid(false);\n    }\n    if(enteredText.trim().length === ''){\n      setEnteredTextIsValid(false);\n    }\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    \n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={location => 'Are you sure you want to leave this page. All your entered data will be lost!'}></Prompt>\n    <Card>\n      <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n          {!enteredAuthorIsValid && <p>Enter a valid name</p>}\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          {!enteredTextIsValid && <p>Enter a valid quote</p> }\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}